"""
The user that log in
"""
type User {
  profile: Profile
}

type Profile {
  name: String
  lastName: String
  type: TypeUser
}

enum TypeUser {
  ADMIN
  EMPLOYEE
}

"""
The product to sell
"""
type Product {
  id: ID
  name: String
  amount: Int
  price: Float
  code: String
  create: String
  restock: String
  labels: [String]
}

"""
The sale data
"""
type Sale {
  id: ID
  products: [Product]
  total: Float
  date: String
  user: User
}

"""
The note object
"""
type Note {
  id: ID
  user: User
  text: String
  create: String
}

"""
The order object
"""
type Order {
  id: ID
  products: [Product]
  date: String
  user: User
  code: String
}

"""
Input User
"""
input CreateUserInput {
  profile: ProfileInput!
}

input ProfileInput {
  name: String!
  lastName: String!
  type: TypeUser!
}

"""
Input of product
"""
input ProductInput {
  name: String!
  amount: Int!
  price: Float!
  code: String
  labels: [String]
}

type Mutation {
  #New product
  newProduct(input: ProductInput): Product
  #Edit product
  editProduct(id: ID!, input: ProductInput): Product
  #Delete product
  deleteProduct(id: ID!): String
}

type Query {
  #Get product by ID
  getProductID(id: ID!): Product
  #Get all the products
  getListProducts: [Product]
}
